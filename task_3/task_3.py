import sys
from pathlib import Path
from colorama import init, Fore, Style

ICON_DIR = "üìÇ"
ICON_FILE = "üìú"

def print_directory_structure(path: Path, prefix: str = "") -> None:
    """
    –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –¥—Ä—É–∫—É—î —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–∫–∏:
    - –ü–∞–ø–∫–∏ ‚Äî —ñ–Ω—à–∏–º –∫–æ–ª—å–æ—Ä–æ–º
    - –§–∞–π–ª–∏ ‚Äî —ñ–Ω—à–∏–º –∫–æ–ª—å–æ—Ä–æ–º
    """
    try:
        items = sorted(path.iterdir(), key=lambda p: (not p.is_dir(), p.name.lower()))
    except PermissionError:
        print(prefix + Fore.RED + "‚õî –î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ" + Style.RESET_ALL)
        return
    except OSError as e:
        print(prefix + Fore.RED + f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è: {e}" + Style.RESET_ALL)
        return

    last_index = len(items) - 1
    for idx, item in enumerate(items):
        is_last = idx == last_index
        connector = "‚îó‚îÅ " if is_last else "‚î£‚îÅ "
        next_prefix = prefix + ("   " if is_last else "‚îÉ  ")

        if item.is_dir():
            print(prefix + Fore.GREEN + connector + ICON_DIR + " " + item.name + Style.RESET_ALL)
            print_directory_structure(item, next_prefix)
        else:
            print(prefix + Fore.BLUE + connector + ICON_FILE + " " + item.name + Style.RESET_ALL)

def main() -> None:
    init(autoreset=True)

    if len(sys.argv) != 2:
        print(
            Fore.RED + """–ü–æ–º–∏–ª–∫–∞: –≤–∫–∞–∂—ñ—Ç—å —à–ª—è—Ö –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.
–ü—Ä–∏–∫–ª–∞–¥: python task_3.py C:\\Users\\User\\Desktop
–ê–±–æ:     python task_3.py .""" + Style.RESET_ALL
        )
        return

    dir_path = Path(sys.argv[1])

    if not dir_path.exists():
        print(Fore.RED + "–í–∫–∞–∑–∞–Ω–∏–π —à–ª—è—Ö –Ω–µ —ñ—Å–Ω—É—î." + Style.RESET_ALL)
        return
    if not dir_path.is_dir():
        print(Fore.RED + "–í–∫–∞–∑–∞–Ω–∏–π —à–ª—è—Ö –Ω–µ –≤–µ–¥–µ –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó." + Style.RESET_ALL)
        return

    # –ö–æ—Ä—ñ–Ω—å
    print(Fore.MAGENTA + f"üì¶ {dir_path.resolve().name}" + Style.RESET_ALL)
    print_directory_structure(dir_path)

if __name__ == "__main__":
    main()







